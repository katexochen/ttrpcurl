# describe services
exec ttrpcurl --proto product.proto describe
! stderr .+
cmp stdout product.services.out

# describe service product.ProductService
exec ttrpcurl --proto product.proto describe product.ProductService
! stderr .+
cmp stdout product.ProductService.out

# describe service product.AdminsService
exec ttrpcurl --proto product.proto describe product.AdminsService
! stderr .+
cmp stdout product.AdminsService.out

# describe request product.GetProductRequest
exec ttrpcurl --proto product.proto describe product.GetProductRequest
! stderr .+
cmp stdout product.GetProductRequest.out

# describe request product.GetProductResponse
exec ttrpcurl --proto product.proto describe product.GetProductResponse
! stderr .+
cmp stdout product.GetProductResponse.out

# describe request product.GetProductsRequest
exec ttrpcurl --proto product.proto describe product.GetProductsRequest
! stderr .+
cmp stdout product.GetProductsRequest.out

# describe request product.GetProductsResponse
exec ttrpcurl --proto product.proto describe product.GetProductsResponse
! stderr .+
cmp stdout product.GetProductsResponse.out

# describe field product.GetProductRequest.Name
exec ttrpcurl --proto product.proto describe product.GetProductRequest.Name
! stderr .+
cmp stdout product.GetProductRequest.Name.out

# describe field product.GetProductResponse.Product
exec ttrpcurl --proto product.proto describe product.GetProductResponse.Product
! stderr .+
cmp stdout product.GetProductResponse.Product.out

# describe field product.GetProductResponse.Name
exec ttrpcurl --proto product.proto describe product.GetProductResponse.Name
! stderr .+
cmp stdout product.GetProductResponse.Name.out

# describe field product.GetProductResponse.Price
exec ttrpcurl --proto product.proto describe product.GetProductResponse.Price
! stderr .+
cmp stdout product.GetProductResponse.Price.out

# describe method product.ProductService.GetProduct
exec ttrpcurl --proto product.proto describe product.ProductService.GetProduct
! stderr .+
cmp stdout product.ProductService.GetProduct.out

# describe method product.ProductService.GetProducts
exec ttrpcurl --proto product.proto describe product.ProductService.GetProducts
! stderr .+
cmp stdout product.ProductService.GetProducts.out

# describe with multiple protos
exec ttrpcurl --proto a.proto --proto b.proto describe
! stderr .+
cmp stdout ab.services.out

# describe AMethod with multiple protos
exec ttrpcurl --proto a.proto,b.proto describe AService.AMethod
! stderr .+
cmp stdout ab.AService.AMethod.out

# describe BMethod with multiple protos
exec ttrpcurl --proto a.proto --proto b.proto describe BService.BMethod
! stderr .+
cmp stdout ab.BService.BMethod.out

# describe A message with multiple protos
exec ttrpcurl --proto a.proto --proto b.proto describe A
! stderr .+
cmp stdout ab.A.out

# describe B message with multiple protos
exec ttrpcurl --proto a.proto --proto b.proto describe B
! stderr .+
cmp stdout ab.B.out


-- product.proto --
syntax = "proto3";

package product;

message GetProductRequest {
    string Name = 1;
}

// GetProductResponse returns a protuct.
message GetProductResponse {
    // Product is the serialized product.
    bytes Product = 1;
    // Name is the name of the product.
    string Name = 2;
    // Price is the price of the product.
    int64 Price = 3;
}

message GetProductsRequest {
    repeated string Names = 1;
}

message GetProductsResponse {
    repeated int64 Prices = 1;
}

service ProductService {
    rpc GetProduct(GetProductRequest) returns (GetProductResponse) {};
    rpc GetProducts(GetProductsRequest) returns (GetProductsResponse) {};
}

message GetAdminsRequest {}

message GetAdminsResponse {
    repeated string Admins = 1;
}

service AdminsService {
    rpc GetAdmins(GetAdminsRequest) returns (GetAdminsResponse) {};
}
-- a.proto --
syntax = "proto3";

message A {}

service AService {
    rpc AMethod (A) returns (A);
}
-- b.proto --
syntax = "proto3";

message B {}

service BService {
    rpc BMethod (B) returns (B);
}
-- product.services.out --
product.ProductService is a service:
service ProductService {
  rpc GetProduct ( .product.GetProductRequest ) returns ( .product.GetProductResponse );
  rpc GetProducts ( .product.GetProductsRequest ) returns ( .product.GetProductsResponse );
}
product.AdminsService is a service:
service AdminsService {
  rpc GetAdmins ( .product.GetAdminsRequest ) returns ( .product.GetAdminsResponse );
}
-- product.ProductService.out --
product.ProductService is a service:
service ProductService {
  rpc GetProduct ( .product.GetProductRequest ) returns ( .product.GetProductResponse );
  rpc GetProducts ( .product.GetProductsRequest ) returns ( .product.GetProductsResponse );
}
-- product.AdminsService.out --
product.AdminsService is a service:
service AdminsService {
  rpc GetAdmins ( .product.GetAdminsRequest ) returns ( .product.GetAdminsResponse );
}
-- product.GetProductRequest.out --
product.GetProductRequest is a message:
message GetProductRequest {
  string Name = 1;
}
-- product.GetProductResponse.out --
product.GetProductResponse is a message:
// GetProductResponse returns a protuct.
message GetProductResponse {
  // Product is the serialized product.
  bytes Product = 1;
  // Name is the name of the product.
  string Name = 2;
  // Price is the price of the product.
  int64 Price = 3;
}
-- product.GetProductsRequest.out --
product.GetProductsRequest is a message:
message GetProductsRequest {
  repeated string Names = 1;
}
-- product.GetProductsResponse.out --
product.GetProductsResponse is a message:
message GetProductsResponse {
  repeated int64 Prices = 1;
}
-- product.ProductService.GetProduct.out --
product.ProductService.GetProduct is a method:
rpc GetProduct ( .product.GetProductRequest ) returns ( .product.GetProductResponse );
-- product.ProductService.GetProducts.out --
product.ProductService.GetProducts is a method:
rpc GetProducts ( .product.GetProductsRequest ) returns ( .product.GetProductsResponse );
-- product.GetProductRequest.Name.out --
product.GetProductRequest.Name is a field:
string Name = 1;
-- product.GetProductResponse.Product.out --
product.GetProductResponse.Product is a field:
// Product is the serialized product.
bytes Product = 1;
-- product.GetProductResponse.Name.out --
product.GetProductResponse.Name is a field:
// Name is the name of the product.
string Name = 2;
-- product.GetProductResponse.Price.out --
product.GetProductResponse.Price is a field:
// Price is the price of the product.
int64 Price = 3;
-- ab.services.out --
AService is a service:
service AService {
  rpc AMethod ( .A ) returns ( .A );
}
BService is a service:
service BService {
  rpc BMethod ( .B ) returns ( .B );
}
-- ab.AService.AMethod.out --
AService.AMethod is a method:
rpc AMethod ( .A ) returns ( .A );
-- ab.BService.BMethod.out --
BService.BMethod is a method:
rpc BMethod ( .B ) returns ( .B );
-- ab.A.out --
A is a message:
message A {
}
-- ab.B.out --
B is a message:
message B {
}
