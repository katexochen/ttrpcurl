# describe services
exec ttrpcurl --proto product.proto describe
cmp stdout product.services.out
! stderr .+

# describe service product.ProductService
exec ttrpcurl --proto product.proto describe product.ProductService
cmp stdout product.ProductService.out
! stderr .+

# describe service product.AdminsService
exec ttrpcurl --proto product.proto describe product.AdminsService
cmp stdout product.AdminsService.out
! stderr .+

# describe request product.GetProductRequest
exec ttrpcurl --proto product.proto describe product.GetProductRequest
cmp stdout product.GetProductRequest.out
! stderr .+

# describe request product.GetProductResponse
exec ttrpcurl --proto product.proto describe product.GetProductResponse
cmp stdout product.GetProductResponse.out
! stderr .+

# describe request product.GetProductsRequest
exec ttrpcurl --proto product.proto describe product.GetProductsRequest
cmp stdout product.GetProductsRequest.out
! stderr .+

# describe request product.GetProductsResponse
exec ttrpcurl --proto product.proto describe product.GetProductsResponse
cmp stdout product.GetProductsResponse.out
! stderr .+

# describe field product.GetProductRequest.Name
exec ttrpcurl --proto product.proto describe product.GetProductRequest.Name
cmp stdout product.GetProductRequest.Name.out
! stderr .+

# describe field product.GetProductResponse.Product
exec ttrpcurl --proto product.proto describe product.GetProductResponse.Product
cmp stdout product.GetProductResponse.Product.out
! stderr .+

# describe field product.GetProductResponse.Name
exec ttrpcurl --proto product.proto describe product.GetProductResponse.Name
cmp stdout product.GetProductResponse.Name.out
! stderr .+

# describe field product.GetProductResponse.Price
exec ttrpcurl --proto product.proto describe product.GetProductResponse.Price
cmp stdout product.GetProductResponse.Price.out
! stderr .+

# describe method product.ProductService.GetProduct
exec ttrpcurl --proto product.proto describe product.ProductService.GetProduct
cmp stdout product.ProductService.GetProduct.out
! stderr .+

# describe method product.ProductService.GetProducts
exec ttrpcurl --proto product.proto describe product.ProductService.GetProducts
cmp stdout product.ProductService.GetProducts.out
! stderr .+

-- product.proto --
syntax = "proto3";

package product;

message GetProductRequest {
    string Name = 1;
}

message GetProductResponse {
    bytes Product = 1;
    string Name = 2;
    int64 Price = 3;
}

message GetProductsRequest {
    repeated string Names = 1;
}

message GetProductsResponse {
    repeated int64 Prices = 1;
}

service ProductService {
    rpc GetProduct(GetProductRequest) returns (GetProductResponse) {};
    rpc GetProducts(GetProductsRequest) returns (GetProductsResponse) {};
}

message GetAdminsRequest {}

message GetAdminsResponse {
    repeated string Admins = 1;
}

service AdminsService {
    rpc GetAdmins(GetAdminsRequest) returns (GetAdminsResponse) {};
}
-- product.services.out --
product.ProductService is a service:
service ProductService {
  rpc GetProduct ( .product.GetProductRequest ) returns ( .product.GetProductResponse );
  rpc GetProducts ( .product.GetProductsRequest ) returns ( .product.GetProductsResponse );
}
product.AdminsService is a service:
service AdminsService {
  rpc GetAdmins ( .product.GetAdminsRequest ) returns ( .product.GetAdminsResponse );
}
-- product.ProductService.out --
product.ProductService is a service:
service ProductService {
  rpc GetProduct ( .product.GetProductRequest ) returns ( .product.GetProductResponse );
  rpc GetProducts ( .product.GetProductsRequest ) returns ( .product.GetProductsResponse );
}
-- product.AdminsService.out --
product.AdminsService is a service:
service AdminsService {
  rpc GetAdmins ( .product.GetAdminsRequest ) returns ( .product.GetAdminsResponse );
}
-- product.GetProductRequest.out --
product.GetProductRequest is a message:
message GetProductRequest {
  string Name = 1;
}
-- product.GetProductResponse.out --
product.GetProductResponse is a message:
message GetProductResponse {
  bytes Product = 1;
  string Name = 2;
  int64 Price = 3;
}
-- product.GetProductsRequest.out --
product.GetProductsRequest is a message:
message GetProductsRequest {
  repeated string Names = 1;
}
-- product.GetProductsResponse.out --
product.GetProductsResponse is a message:
message GetProductsResponse {
  repeated int64 Prices = 1;
}
-- product.ProductService.GetProduct.out --
product.ProductService.GetProduct is a method:
rpc GetProduct ( .product.GetProductRequest ) returns ( .product.GetProductResponse );
-- product.ProductService.GetProducts.out --
product.ProductService.GetProducts is a method:
rpc GetProducts ( .product.GetProductsRequest ) returns ( .product.GetProductsResponse );
-- product.GetProductRequest.Name.out --
product.GetProductRequest.Name is a field:
string Name = 1;
-- product.GetProductResponse.Product.out --
product.GetProductResponse.Product is a field:
bytes Product = 1;
-- product.GetProductResponse.Name.out --
product.GetProductResponse.Name is a field:
string Name = 2;
-- product.GetProductResponse.Price.out --
product.GetProductResponse.Price is a field:
int64 Price = 3;
